framingham <- read_csv("framingham.csv")
View(framingham)

install.packages("ggplot2")
library(ggplot2)
library(cowplot)
library(dplyr)

# Teste
# Substituir os NA na coluna 'education' com o valor 1.979 aproximado
framingham$education[is.na(framingham$education)] <- 2
# Deu certo aplicar a média para substituir os NA
# Substituir os NA de todas as colunas por sua respectiva média
# Seria mais eficiente calcular as médias das colunas de forma programática
framingham$cigsPerDay[is.na(framingham$cigsPerDay)] <- mean(framingham$cigsPerDay, na.rm = TRUE)
framingham$BPMeds[is.na(framingham$BPMeds)] <- mean(framingham$BPMeds, na.rm = TRUE)
framingham$totChol[is.na(framingham$totChol)] <- mean(framingham$totChol, na.rm = TRUE)
framingham$BMI[is.na(framingham$BMI)] <- mean(framingham$BMI, na.rm = TRUE)
framingham$heartRate[is.na(framingham$heartRate)] <- mean(framingham$heartRate, na.rm = TRUE)
framingham$glucose[is.na(framingham$glucose)] <- mean(framingham$glucose, na.rm = TRUE)

# education e diaBP
# Cálculo da variância das colunas 'prevalentHyp' e 'diaBP'
var_prevalentHyp <- var(framingham$prevalentHyp)
var_diaBP <- var(framingham$diaBP)

# Cálculo da covariância entre todas as colunas
cov_matrix <- cov(framingham)

# prevalentHyp cov prevalentHyp é 0.214149313
# diaBP cov diaBP é 141.86833820
sqrt_var_prevalentHyp <- sqrt(var_prevalentHyp)
sqrt_var_diaBP <- sqrt(var_diaBP)

mean_prevalentHyp <- mean(framingham$prevalentHyp)
mean_diaBP <- mean(framingham$diaBP)

# Regressão logística para prever 'TenYearCHD' com várias variáveis independentes
glm(TenYearCHD ~ ., family = binomial(link = "logit"), data = framingham)
glm(TenYearCHD ~ male, family = binomial(link = "logit"), data = framingham)
glm(TenYearCHD ~ age, family = binomial(link = "logit"), data = framingham)
glm(TenYearCHD ~ education, family = binomial(link = "logit"), data = framingham)
glm(TenYearCHD ~ currentSmoker, family = binomial(link = "logit"), data = framingham)
glm(TenYearCHD ~ cigsPerDay, family = binomial(link = "logit"), data = framingham)
glm(TenYearCHD ~ BPMeds, family = binomial(link = "logit"), data = framingham)
glm(TenYearCHD ~ prevalentStroke, family = binomial(link = "logit"), data = framingham)
glm(TenYearCHD ~ prevalentHyp, family = binomial(link = "logit"), data = framingham)
glm(TenYearCHD ~ diabetes, family = binomial(link = "logit"), data = framingham)
glm(TenYearCHD ~ totChol, family = binomial(link = "logit"), data = framingham)
glm(TenYearCHD ~ sysBP, family = binomial(link = "logit"), data = framingham)
glm(TenYearCHD ~ diaBP, family = binomial(link = "logit"), data = framingham)
glm(TenYearCHD ~ BMI, family = binomial(link = "logit"), data = framingham)
glm(TenYearCHD ~ heartRate, family = binomial(link = "logit"), data = framingham)
glm(TenYearCHD ~ glucose, family = binomial(link = "logit"), data = framingham)

# Visualizações com ggplot2
library(ggplot2)

# Histograma da prevalência de doença coronariana por sexo
histogramsex <- ggplot(framingham, aes(x = factor(male), fill = factor(TenYearCHD))) +
  geom_bar(position = "stack", stat = "count") +
  labs(title = "Doença arterial coronariana por Sexo", x = "Sexo: 0=Fem, 1=Masc", y = "Contagem") +
  scale_fill_manual(values = c("#1E2C3C", "#49A4E4"))
print(histogramsex)

# Histograma da prevalência de doença coronariana por idade
histogramage <- ggplot(framingham, aes(x = age, fill = factor(TenYearCHD))) +
  geom_bar(position = "stack", stat = "count") +
  labs(title = "Doença arterial coronariana por Idade", x = "Idade", y = "Contagem") +
  scale_fill_manual(values = c("#1E2C3C", "#49A4E4"))
print(histogramage)

# Boxplots combinados da prevalência de doença coronariana por pressão arterial sistólica e diastólica
combined_plot <- ggplot(data = framingham, aes(x = as.factor(TenYearCHD), fill = as.factor(TenYearCHD))) +
  geom_boxplot(aes(y = sysBP), notch = TRUE, position = position_dodge(width = 0.75), color = "#1E2C3C") +  
  geom_boxplot(aes(y = diaBP), notch = TRUE, position = position_dodge(width = 0.75), color = "#49A4E4") +
  labs(title = "Doença arterial coronariana por Pressão Sanguínea Sistólica e Diastólica",  
       x = "Doença coronariana em 10 anos (CHD)", y = "Pressão Sanguínea") +
  theme_minimal()
print(combined_plot)

# Boxplots da prevalência de doença coronariana por IMC e batimento cardíaco
library(cowplot)
x <- ggplot(data = framingham, mapping = aes(x = as.factor(TenYearCHD), y = BMI, fill = as.factor(TenYearCHD))) +
  geom_boxplot()
y <- ggplot(data = framingham, mapping = aes(x = as.factor(TenYearCHD), y = heartRate, fill = as.factor(TenYearCHD))) +
  geom_boxplot()
p <- plot_grid(x, y)
title <- ggdraw() + draw_label("Doença arterial coronariana por IMC / Batimento cardíaco")
plot_grid(title, p, ncol = 1, rel_heights = c(0.1, 1))

# Histograma da prevalência de doença coronariana por AVC
library(dplyr)
filtered_data <- filter(framingham, prevalentStroke == 1)
histogramStroke <- ggplot(filtered_data, aes(x = factor(prevalentStroke), fill = factor(TenYearCHD))) +
  geom_bar(position = "stack", stat = "count") +
  labs(title = "Doença arterial coronariana por AVC", x = "AVC", y = "Contagem") +
  scale_fill_manual(values = c("#1E2C3C", "#49A4E4"))
print(histogramStroke)

# Histograma da prevalência de doença coronariana por pressão arterial diastólica (diaBP)
histogramdiaBP <- ggplot(filtered_data, aes(x = diaBP, fill = factor(TenYearCHD))) +
  geom_bar(position = "stack", stat = "count") +
  labs(title = "Doença arterial coronariana por Pressão Arterial Diastólica", x = "Pressão Arterial Diastólica", y = "Contagem") +
  scale_fill_manual(values = c("#1E2C3C", "#49A4E4"))
print(histogramdiaBP)
